// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	models "myapp/internal/models"

	mock "github.com/stretchr/testify/mock"

	payloads "myapp/internal/shared/payloads"
)

// Post is an autogenerated mock type for the Post type
type Post struct {
	mock.Mock
}

// CreatePost provides a mock function with given fields: post
func (_m *Post) CreatePost(post *models.Post) error {
	ret := _m.Called(post)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Post) error); ok {
		r0 = rf(post)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeletePost provides a mock function with given fields: userIdFromToken, postId
func (_m *Post) DeletePost(userIdFromToken int, postId int) error {
	ret := _m.Called(userIdFromToken, postId)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, int) error); ok {
		r0 = rf(userIdFromToken, postId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllPosts provides a mock function with given fields:
func (_m *Post) GetAllPosts() ([]models.Post, error) {
	ret := _m.Called()

	var r0 []models.Post
	if rf, ok := ret.Get(0).(func() []models.Post); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Post)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPost provides a mock function with given fields: postId
func (_m *Post) GetPost(postId int) (*models.Post, error) {
	ret := _m.Called(postId)

	var r0 *models.Post
	if rf, ok := ret.Get(0).(func(int) *models.Post); ok {
		r0 = rf(postId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Post)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(postId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdatePost provides a mock function with given fields: userIdFromToken, postId, payload
func (_m *Post) UpdatePost(userIdFromToken int, postId int, payload *payloads.UpdatePostPayload) error {
	ret := _m.Called(userIdFromToken, postId, payload)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, int, *payloads.UpdatePostPayload) error); ok {
		r0 = rf(userIdFromToken, postId, payload)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
